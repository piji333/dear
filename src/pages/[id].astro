---
import BestWishes from "../components/bestWishes/BestWishes.astro";
import CoupleProfile from "../components/coupleProfile/CoupleProfile.astro";
import EventSchedule from "../components/eventSchedule/EventSchedule.astro";
import FrontCover from "../components/frontCover/FrontCover.astro";
import FrontDecorator from "../components/frontDecorator/FrontDecorator.astro";
import GallerySection from "../components/gallery/gallerySection/GallerySection.astro";
import RsvpSection from "../components/rsvpSection/RsvpSection.astro";
import SaveTheDateSection from "../components/saveTheDateSection/SaveTheDateSection.astro";
import Verse from "../components/verse/Verse.astro";
import WishesToUs from "../components/wishesToUs/WishesToUs.astro";
import BaseLayout from "../layouts/BaseLayout.astro";

const { id } = Astro.params;
---

<BaseLayout>
  <script type="module" define:vars={{ id }}>
    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js";
    import {
      getDatabase,
      ref,
      get,
      update,
    } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-database.js";

    const firebaseConfig = {
      apiKey: "AIzaSyCtLpbWHZmZn3dCOILpt7JnWbj-KDqviGs",

      authDomain: "dear-21512.firebaseapp.com",

      projectId: "dear-21512",

      storageBucket: "dear-21512.appspot.com",

      messagingSenderId: "722019212853",

      appId: "1:722019212853:web:646c85a21e5d1715015b7c",

      measurementId: "G-GQL33WTE0B",

      databaseURL:
        "https://dear-21512-default-rtdb.asia-southeast1.firebasedatabase.app",
    };

    // Initialize Firebase
    const app = initializeApp(firebaseConfig);
    const db = getDatabase(app);

    // Function to fetch RSVP data by unique_id
    async function fetchRSVPByUniqueId(uniqueId) {
      const rsvpRef = ref(db, `rsvps/${uniqueId}`);

      try {
        const snapshot = await get(rsvpRef);

        if (snapshot.exists()) {
          const data = snapshot.val(); // Get the data

          const nameElements = document.querySelectorAll(".guest-name");
          nameElements.forEach((element) => {
            element.textContent = data.name;
          });
          document.querySelectorAll(".guest-pronoun").forEach((element) => {
            if (data.pronoun) {
              element.textContent = `Dear ${data.pronoun}`;
            } else {
              element.textContent = "Dear";
            }
          });

          return data;
        } else {
          console.error("No RSVP found with the given unique ID");
          // redirect to home page if no RSVP found
          window.location.href = `/`;
        }
      } catch (error) {
        console.error("Error fetching RSVP: ", error.message);
      }
    }

    function renderRSVPForm(rsvpData) {
      const container = document.getElementById("rsvp-container");
      container.innerHTML = ""; // Clear existing content

      if (
        rsvpData.willJoinQN === "false" &&
        rsvpData.willJoin === "false"
      ) {
        container.innerHTML = `
<p>Thank you for your response.</p>
 <p>We understand that you are unable to attend this time.</p><br>
 <p>We look forward to the opportunity to see you on a future occasion!</p><br>
 <button id="changeAnswer" style="margin-top: 16px">Change Response</button>
  `;

        const changeButton = document.getElementById("changeAnswer");
        changeButton.addEventListener("click", () => {
          renderRSVPForm({
            ...rsvpData,
            willJoin: null,
            willJoinQN: null,
            willJoinOther: null,
          }); // Reset form
        });
      } else if (
        rsvpData.willJoinQN !== "true" &&
        rsvpData.willJoin !== "true" &&
        rsvpData.willJoinOther !== "true"
      ) {
        // Will join is undecided, show the form to make a decision
        container.innerHTML = `
      <p>Would you like to join and celebrate with us on any of the following dates?</p>
      
      <div style="display: flex; justify-content: center;">
      <div style="margin-top: 16px; text-align: left">
        <div id="willJoinQNCheckboxInput" >
          <input type="checkbox" id="willJoinQNCheckbox">
          <label for="willJoinQNCheckbox">November 8, 2024 in Quang Ngai</label>
        </div>
  
        <div id="willJoinCheckboxInput" style="">
          <input type="checkbox" id="willJoinCheckbox">
          <label for="willJoinCheckbox">November 10, 2024 in Da Nang</label>
        </div>
  
        <div id="willJoinOtherCheckboxInput" style="">
          <input type="checkbox" id="willJoinOtherCheckbox">
          <label for="willJoinOtherCheckbox">Another time</label>
        </div>
      </div>
      </div>
      
      <div id="additionalInfoInput" style="margin-top: 16px; display: none">
        <div id="guestsNumberInput">
          <label for="guestsInput">Number of Guests:</label><br>
          <input class="centerInput form-control btnstyle custom-form-control-paddingLeft" type="number" id="guestsInput" min="0" value="${rsvpData?.numberOfGuest || 1}" disabled>
          </div>

        <div id="vegetarianInput" style="margin-top: 8px">
          <label for="vegetarian">Vegetarian </label>
          <input type="checkbox" id="vegetarian">
        </div>

        <div id="guestEmailInput" style="">
          <label for="guestEmail">Email:</label><br>
          <input placeholder="Optional Email" class="centerInput form-control btnstyle custom-form-control-paddingLeft" type="email" id="guestEmail" value="${rsvpData?.email || ""}" disabled>
        </div>

        <div id="noteInput" style="">
          <label for="note">Note:</label><br>
          <input placeholder="Optional Note" class="centerInput form-control btnstyle custom-form-control-paddingLeft" type="text" id="note" value="${rsvpData?.note || ""}" disabled>
        </div>
      </div>
      </div>


      <button id="submitRSVP" style="margin-top: 24px">Submit</button>
    `;

        // const joinCheckbox = document.getElementById("joinCheckbox");
        const guestsInput = document.getElementById("guestsInput");
        const guestEmail = document.getElementById("guestEmail");
        const vegetarian = document.getElementById("vegetarian");
        const note = document.getElementById("note");
        const submitButton = document.getElementById("submitRSVP");

        // checkbox state for vegetarian
        vegetarian.checked = rsvpData?.vegetarian;

        document.getElementById("willJoinQNCheckbox").checked =
          rsvpData?.willJoinQN === "true";
        document.getElementById("willJoinCheckbox").checked =
          rsvpData?.willJoin === "true";
        document.getElementById("willJoinOtherCheckbox").checked =
          rsvpData?.willJoinOther === "true";

        const willJoinQNCheckbox =
          document.getElementById("willJoinQNCheckbox");
        const willJoinCheckbox = document.getElementById("willJoinCheckbox");
        const willJoinOtherCheckbox = document.getElementById(
          "willJoinOtherCheckbox"
        );

        const controlAdditionalInfoInput = () => {
          const willJoinQNRadioValue = willJoinQNCheckbox?.checked
            ? "true"
            : "false";
          const willJoinRadioValue = willJoinCheckbox?.checked
            ? "true"
            : "false";
          const willJoinOtherRadioValue = willJoinOtherCheckbox?.checked
            ? "true"
            : "false";

          guestsInput.disabled = !(
            willJoinRadioValue === "true" || willJoinQNRadioValue === "true"
          );
          guestEmail.disabled = !(
            willJoinRadioValue === "true" || willJoinQNRadioValue === "true"
          );
          vegetarian.disabled = !(
            willJoinRadioValue === "true" || willJoinQNRadioValue === "true"
          );
          note.disabled = !(
            willJoinRadioValue === "true" || willJoinQNRadioValue === "true"
          );

          const additionalInfoInputComponent = document.getElementById(
            "additionalInfoInput"
          );

          // Toggle visibility based on the boolean value
          if (
            willJoinRadioValue === "true" ||
            willJoinQNRadioValue === "true"
          ) {
            additionalInfoInputComponent.style.display = "block"; // Show the component
          } else {
            additionalInfoInputComponent.style.display = "none"; // Hide the component
          }
        };

        willJoinCheckbox.addEventListener("change", controlAdditionalInfoInput);
        willJoinQNCheckbox.addEventListener(
          "change",
          controlAdditionalInfoInput
        );

        submitButton.addEventListener("click", async () => {
          const willJoinQNRadioValue = willJoinQNCheckbox?.checked
            ? "true"
            : "false";
          const willJoinRadioValue = willJoinCheckbox?.checked
            ? "true"
            : "false";
          const willJoinOtherRadioValue = willJoinOtherCheckbox?.checked
            ? "true"
            : "false";

          const willJoin = willJoinRadioValue;
          const numberOfGuests = parseInt(guestsInput.value, 10) || 0;
          try {
            await updateRSVP(
              willJoin,
              willJoinQNRadioValue,
              willJoinOtherRadioValue,
              numberOfGuests,
              guestEmail.value,
              vegetarian.checked,
              note.value
            );
          } catch (error) {
            alert("Please try again.");
            console.error("Error updating RSVP: ", error.message);
          }
        });
      } else {
        // Will join, show confirmation and option to change answer
        const wordList = [
          `
      <p>Thank you for accepting our invitation. </p><br>
          `,
          rsvpData?.willJoinQN === "true"
            ? `
      <p>We look forward to seeing you on November 8, 2024 in Quang Ngai!</p><br>
          `
            : null,
          rsvpData?.willJoin === "true"
            ? `
      <p>We look forward to seeing you on November 10, 2024 in Da Nang!</p><br>
          `
            : null,
          rsvpData?.numberOfGuest ||
          rsvpData?.email ||
          rsvpData?.vegetarian ||
          rsvpData?.note
            ? `
      <p> Additional confirmation details:</p>
          `
            : null,
          rsvpData?.numberOfGuest
            ? `
      <p>Number of Guests: ${rsvpData?.numberOfGuest}</p>
          `
            : null,
          rsvpData?.email
            ? `
      <p>Email: ${rsvpData?.email}</p>
          `
            : null,
          rsvpData?.vegetarian
            ? `
      <p>Vegetarian: ${rsvpData?.vegetarian ? "Yes" : "No"}</p>
    `
            : null,
          rsvpData?.note
            ? `
      <p>Note: ${rsvpData?.note}</p>
          `
            : null,
          `
      <button id="changeAnswer" style="margin-top: 28px">Change Response</button>
          `,
        ];
        container.innerHTML = wordList.join("");

        const changeButton = document.getElementById("changeAnswer");
        changeButton.addEventListener("click", () => {
          renderRSVPForm({
            ...rsvpData,
            willJoin: null,
            willJoinQN: null,
            willJoinOther: null,
          }); // Reset form
        });
      }
    }

    // Function to update RSVP in Firebase
    async function updateRSVP(
      willJoin,
      willJoinQN,
      willJoinOther,
      numberOfGuests,
      guestEmail,
      vegetarian,
      note
    ) {
      const uniqueId = id;
      const rsvpRef = ref(db, `rsvps/${uniqueId}`);
      try {
        await update(rsvpRef, {
          willJoin: willJoin,
          willJoinQN: willJoinQN,
          willJoinOther: willJoinOther,
          numberOfGuest: numberOfGuests,
          email: guestEmail,
          vegetarian: vegetarian,
          note: note,
        });
        alert("RSVP updated successfully!");
        renderRSVPForm({
          willJoin: willJoin,
          willJoinQN: willJoinQN,
          willJoinOther: willJoinOther,
          numberOfGuest: numberOfGuests,
          email: guestEmail,
          vegetarian,
          note,
        });
      } catch (error) {
        console.error("Error updating RSVP:", error);
        alert("There was an error updating your RSVP. Please try again.");
      }
    }

    document.addEventListener("DOMContentLoaded", async () => {
      const rsvpData = await fetchRSVPByUniqueId(id);
      renderRSVPForm(rsvpData);
    });
  </script>

  <link rel="stylesheet" href="/css/styleB.css" />

  <div class="md-modal md-effect-12">
    <div class="md-content content-modal">
      <center>
        <div class="btnstyle whitecolor guestcolor">
          <span class="guest-pronoun">Mr./Mrs./Ms.</span>
        </div>
        <div class="sectitle guestcolor guest-name" style="font-size: 1.75rem;">
          Guest Name
        </div>
      </center>
      <button class="md-close btnstyle pinkcolor" id="fixedbutton"
        >OPEN INVITATION</button
      >
    </div>
  </div>

  <div class="md-overlay"></div>

  <div id="main-wrap" class="cover no-scroll">
    <div
      class="cover main-page style_minimalist font-rosemary_jasmine-title"
      style="background-color:#fffbed"
    >
      <div
        class="layout-cover cover animate__animated layout_style2 animate__fadeIn animate__delay-1s"
        style="background-color:#fffbed"
      >
        <div id="wrapperUndangan">
          <FrontDecorator />

          <div class="scrollableUndangan" id="contentscroll">
            <FrontCover />

            <div
              class="content-layout cover"
              style='background-image: url("/images/background.png");background-repeat: repeat-y;background-size: 100%;background-color:#fffbed'
            >
              <Verse />

              <CoupleProfile />

              <EventSchedule />

              <RsvpSection />

              <SaveTheDateSection />

              <!-- Display the countdown timer in an element -->
              <p id="demo"></p>

              <script is:inline src="/js/countDown.js"></script>

              <GallerySection />

              <WishesToUs />

              <BestWishes />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>
